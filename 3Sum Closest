Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.

Return the sum of the three integers.

You may assume that each input would have exactly one solution.

 

Example 1:

Input: nums = [-1,2,1,-4], target = 1
Output: 2
Explanation: The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
Example 2:

Input: nums = [0,0,0], target = 1
Output: 0

Codeas Are:-
int threeSumClosest(vector<int>& nums, int target) {
        
        sort(nums.begin(), nums.end());
        int n = nums.size();
        int result = nums[0] + nums[1] + nums[2];
        for(int i=0; i<n-2; i++){   // n-2 is to maintain sum of the last 3 elements in the array
            int s_ptr = i+1, l_ptr=n-1;
            while(s_ptr < l_ptr){
                int curr_sum = nums[i] + nums[s_ptr] + nums[l_ptr];
                if(curr_sum > target)
                    l_ptr--;
                else
                    s_ptr++;             
                if(abs(curr_sum - target) < abs(result - target))
                    result = curr_sum;
            }
        }
        return result;
    }
