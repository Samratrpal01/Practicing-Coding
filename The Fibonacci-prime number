Given a number N, the task is to find if N is Fibonacci-prime number or not. A Fibonacci-prime is any number that is both a prime and a Fibonacci number.

Example 1:

Input: N = "5"
Output: 1
Explanation: 5 is a Fibonacci number and
prime too 
Example 2:

Input: N = "8"
Output: 0
Explanation: 8 is a Fibonacci number but, 
not a prime. 
Your Task:
You don't need to read input or print anything. Your task is to complete the function fibonacciPrime() which takes a string as inputs representing the number and returns 1 if the given number is a fibonacci-prime number, otherwise 0.


Expected Time Complexity: O(constant).
Expected Auxiliary Space: O(constant).

Codes Are:-
int fibonacciPrime(string N)
	{
	    vector<string> arr{"2", "3", "5", "13", "89", "233", "1597", "28657", "514229",
"433494437", "2971215073", "99194853094755497", "1066340417491710595814572169",
"19134702400093278081449423917",
"475420437734698220747368027166749382927701417016557193662268716376935476241"};
	    
	    for(auto i=0;i<arr.size();i++)
	    {
	        if(N==arr[i])
	        return 1;
	        
	    }
	    return 0;
	    
	}
