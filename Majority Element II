Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

 

Example 1:

Input: nums = [3,2,3]
Output: [3]
Example 2:

Input: nums = [1]
Output: [1]
Example 3:

Input: nums = [1,2]
Output: [1,2]
 

Constraints:

1 <= nums.length <= 5 * 104
-109 <= nums[i] <= 109

Codes Are:-
  vector<int> majorityElement(vector<int>& nums) {
        map<int,int>mp;
        for(auto i=0;i<nums.size();i++)
            mp[nums[i]]++;
        
        int n=nums.size();
        vector<int>v;
        
        for(auto i:mp)
        {
            if(i.second>n/3)
                v.push_back(i.first);
            
            
        }
        
        return v;
    }
