Given a string return all unique possible subsequences which start with vowel and end with consonant. A String is a subsequence of a given String, that is generated by deleting some character of a given string without changing its order.
NOTE: Return all the unique subsequences in lexicographically sorted order. 

Example 1:

Input: S = "abc"
Output: "ab", "ac", "abc" 
Explanation: "ab", "ac", "abc" are 
the all possible subsequences which 
start with vowel and end with consonant.
Example 2:

Input: S = "aab"
Output: "ab", "aab"
Explanation: "ab", "aab" are the all 
possible subsequences which start 
with vowel and end with consonant.

Codes Are:-
void helper(string str,int id,set<string>&ans,string temp,string vowel){
       if(id==str.length()){
           if(temp.length()>0){
               char ch1=temp[0];
               char ch2=temp[temp.length()-1];
               if((vowel.find(ch1)!=string::npos) &&(vowel.find(ch2)==string::npos) ){
                   ans.insert(temp);
               }
           }
           return;
       }
       helper(str,id+1,ans,temp,vowel);
       
       
       temp.push_back(str[id]);
       helper(str,id+1,ans,temp,vowel);
   }
    set<string> allPossibleSubsequences(string S) {
       set<string>ans;
       string temp="";
       string vowel={'a','e','i','o','u'};
       helper(S,0,ans,temp,vowel);
       return ans;
    }
