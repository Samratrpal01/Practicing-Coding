Given a sorted linked list, delete all nodes that have duplicate numbers (all occurrences), leaving only numbers that appear once in the original list. 

Example 1:

Input: 
N = 8
Linked List = 23->28->28->35->49->49->53->53
Output: 
23 35
Explanation:
The duplicate numbers are 28, 49 and 53 which 
are removed from the list.
Example 2:

Input:
N = 6
Linked List = 11->11->11->11->75->75
Output: 
Empty list
Explanation:
All the nodes in the linked list have 
duplicates. Hence the resultant list 
would be empty.

Codes Are:-
Node* removeAllDuplicates(struct Node* head)
    {
        if(!head)
            return head;

        if(head->next && head->data == head->next->data){
            while(head->next && head->data == head->next->data){
                head = head->next;
            }
            head = head->next;
            head = removeAllDuplicates(head);    
        }else{
            head->next = removeAllDuplicates(head->next);
        }
        return head;
    }
