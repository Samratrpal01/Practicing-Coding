Input: nums = {1, 2, 3}
Output: 14.000000
Explanation: {1}, {2}, {3},
{1, 2}, {2, 3}, {1, 3}, {1, 2, 3}
So average will be 1, 2, 3, 1.5, 
2.5, 2 and 2. Hence summation will be
1 + 2 + 3 + 1.5 + 2.5 + 2 + 2 = 14.0
Example 2:

Input: nums = {2, 5}
Output: 10.500000
Explanation: {2}, {5}, {2, 5}. So average
will be 2, 5 and 3.5. Sum = 2 + 5 + 3.5 = 10.5
 

Your Task:
You don't need to read or print anyhting. Your task is to complete the function AverageOfAllSubsets() which takes the array as input parameter and returns the sum of average of all subsets of the array.
 

Expected Time Complexity: O(n3)
Expected Space Compelxity: O(n2)

Code Are:-
double AverageOfAllSubsets(vector<int>nums)
	{   int sum=0;
	
	    for(auto i:nums)
	    sum+=i;
	    int n=nums.size();
	    
	    int c[nums.size()];
	    memset(c,0,sizeof(c));
	    c[0]=1;
	    for(auto i=1;i<n;i++)
	    {
	        for(auto j=i;j>0;j--)
	        {
	            c[j]+=c[j-1];
	        }
	    }
	    double ans=0;
	    for(auto i=1;i<=n;i++)
	    {
	        ans+=(c[i-1]/double(i));
	    }
	    
	    return sum*ans;
	}
