Given two numbers 'N' and 'S' , find the largest number that can be formed with 'N' digits and whose sum of digits should be equals to 'S'.

Example 1:

Input: N = 2, S = 9
Output: 90
Explaination: It is the biggest number 
with sum of digits equals to 9.
Example 2:

Input: N = 3, S = 20
Output: 992
Explaination: It is the biggest number 
with sum of digits equals to 20.
Your Task:
You do not need to read input or print anything. Your task is to complete the function findLargest() which takes N and S as input parameters and returns the largest possible number. Return -1 if no such number is possible.

Expected Time Complexity: O(N)
Exepcted Auxiliary Space: O(1)

Codes Are:-
 string findLargest(int N, int S){
       int i=9,j=0;
       vector<int>v;
       if(S==0 and (N>1))
       return "-1";
       
       
       while(j<N)
       {
           if(i>S)
           {
               i--;
           }
           else
           {
               S-=i;
               v.push_back(i);
               j++;
           }
       }
       
       if(S>0)
       return "-1";
       
       string str;
       for(auto i=v.begin();i!=v.end();i++)
       {
           str+=to_string(*i);
       }
       
       
       return str;
    }
