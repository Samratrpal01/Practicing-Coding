Given an integer array nums and two integers k and t, return true if there are two distinct indices i and j in the array such that abs(nums[i] - nums[j]) <= t and abs(i - j) <= k.

 

Example 1:

Input: nums = [1,2,3,1], k = 3, t = 0
Output: true
Example 2:

Input: nums = [1,0,1,1], k = 1, t = 2
Output: true
Example 3:

Input: nums = [1,5,9,1,5,9], k = 2, t = 3
Output: false

Codes Are:-
  bool containsNearbyAlmostDuplicate(vector<int>& nums, int k, int t) {
      int n = nums.size();
    map<long long, int> mp;
    for(int i = 0; i < n; i++)
    {
        if(i > k && !(--mp[nums[i - k - 1]]))
            mp.erase(nums[i - k - 1]);
        
        auto it = mp.lower_bound(nums[i] - (long long)t);
        if(it != mp.end() && it->first <= nums[i] + (long long)t)
            return true;
        
        mp[nums[i]]++;
    }
    
    return false;

    }
