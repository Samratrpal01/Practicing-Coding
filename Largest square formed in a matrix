Given a binary matrix mat of size n * m, find out the maximum size square sub-matrix with all 1s.

Example 1:

Input: n = 2, m = 2
mat = {{1, 1}, 
       {1, 1}}
Output: 2
Explaination: The maximum size of the square
sub-matrix is 2. The matrix itself is the 
maximum sized sub-matrix in this case.
Example 2:

Input: n = 2, m = 2
mat = {{0, 0}, 
       {0, 0}}
Output: 0
Explaination: There is no 1 in the matrix.
Your Task:
You do not need to read input or print anything. Your task is to complete the function maxSquare() which takes n, m and mat as input parameters and returns the size of the maximum square sub-matrix of given matrix.

Expected Time Complexity: O(n*m)
Expected Auxiliary Space: O(n*m)

Codes Are:-
int maxSquare(int n, int m, vector<vector<int>> mat){
        int max_sq=0;
      if(n==1){
         for(int i=0;i<m;i++){
            if(mat[0][i]==1) return 1;
         }
         return 0;
      }
      if(m==1){
         for(int i=0;i<n;i++){
             if(mat[i][0]==1) return 1;
         }
         return 0;
      }
      for(int i=1;i<n;i++){
        for(int j=1;j<m;j++){
          if(mat[i][j]==1){
             mat[i][j]=1+min(mat[i-1][j],
             		min(mat[i-1][j-1],mat[i][j-1]));
             max_sq=max(mat[i][j],max_sq);
          }
        }
      }
       return max_sq;
    }
