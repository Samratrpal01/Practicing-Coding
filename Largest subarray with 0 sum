Largest subarray with 0 sum 
Easy Accuracy: 46.94% Submissions: 91723 Points: 2
Given an array having both positive and negative integers. The task is to compute the length of the largest subarray with sum 0.

Example 1:

Input:
N = 8
A[] = {15,-2,2,-8,1,7,10,23}
Output: 5
Explanation: The largest subarray with
sum 0 will be -2 2 -8 1 7.
Your Task:
You just have to complete the function maxLen() which takes two arguments an array A and n, where n is the size of the array A and returns the length of the largest subarray with 0 sum.

Expected Time Complexity: O(N).
Expected Auxiliary Space: O(N).

int maxLen(vector<int>&A, int n)
    {   
        
       map<int, int> mp;
        int s = 0, max_len = 0;
        for(int i = 0; i < n; i++)
        {
            s += A[i];
            if(s == 0)
                max_len = i+1;
            else
            {
                if(mp.find(s) == mp.end())
                    mp[s] = i;
                else
                    max_len = max(max_len, i-mp[s]);
            }
            
        }
        return max_len;
    }

