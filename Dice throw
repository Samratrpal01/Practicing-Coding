Given N dice each with M faces, numbered from 1 to M, find the number of ways to get sum X. X is the summation of values on each face when all the dice are thrown.

 

Example 1:

Input:
M = 6, N = 3, X = 12
Output:
25
Explanation:
There are 25 total ways to get
the Sum 12 using 3 dices with
faces from 1 to 6.
Example 2:

Input:
M = 2, N = 3, X = 6
Output:
1
Explanation:
There is only 1 way to get
the Sum 6 using 3 dices with
faces from 1 to 2. All the
dices will have to land on 2.
 

Your Task:
You don't need to read input or print anything. Your task is to complete the function noOfWays() which takes 3 Integers M,N and X as input and returns the answer.

 

Expected Time Complexity: O(M*N*X)
Expected Auxiliary Space: O(N*X)

Codes Are:-
long long noOfWays(int M , int N , int X) {
 long long int dp[N+1][X+1];
       memset(dp,0,sizeof(dp));
       dp[0][0]=1;
       for(int i=1;i<=N;i++){
           for(int j=1;j<=X;j++){
               for(int k=1;k<=M;k++){
                   if(k<=j){
                       dp[i][j]+=dp[i-1][j-k];
                   }
               }
           }
       }
       return dp[N][X];
    }
