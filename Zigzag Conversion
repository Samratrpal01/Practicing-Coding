The string "PAYPALISHIRING" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)

P   A   H   N
A P L S I I G
Y   I   R
And then read line by line: "PAHNAPLSIIGYIR"

Write the code that will take a string and make this conversion given a number of rows:

string convert(string s, int numRows);
 

Example 1:

Input: s = "PAYPALISHIRING", numRows = 3
Output: "PAHNAPLSIIGYIR"
Example 2:

Input: s = "PAYPALISHIRING", numRows = 4
Output: "PINALSIGYAHRPI"
Explanation:
P     I    N
A   L S  I G
Y A   H R
P     I
Example 3:

Input: s = "A", numRows = 1
Output: "A"
 

Constraints:

1 <= s.length <= 1000
s consists of English letters (lower-case and upper-case), ',' and '.'.
1 <= numRows <= 1000

Codes Are:-
string convert(string s, int numRows) {
        if(numRows == 1)
            return s;
        
        int n = (int)s.size();
		
		
        vector<pair<int, pair<int, char>>> store;
        string ans = "";

        int row = 0, idx = 0;
        while(idx < n)
        {
            // Filling downward
            while(row < numRows)
            {
                if(idx >= n)
                    break;
                row++; 
                store.push_back({row - 1, {idx, s[idx++]}});
            
            }
			
            row-=2;
            
            
            while(row > 0)
            {
                if(idx >= n)
                    break;
                row--, 
                store.push_back({row + 1, {idx, s[idx++]}});
            }
                 
        }
        
		sort(store.begin(), store.end(), [](pair<int, pair<int, char>> &a, pair<int, pair<int, char>> &b){
           
		   if(a.first == b.first)
            {
                return a.second.first < b.second.first;
            }
            
			return a.first < b.first;
        });
             
        for(auto &i: store)
        {
            ans += i.second.second;
        }
        return ans;
        
    }
