Given a string S consisting only of opening and closing parenthesis 'ie '('  and ')', find out the length of the longest valid(well-formed) parentheses substring.
NOTE: Length of the smallest valid substring ( ) is 2.

Example 1:

Input: S = "(()("
Output: 2
Explanation: The longest valid 
substring is "()". Length = 2.
Example 2:

Input: S = "()(())("
Output: 6
Explanation: The longest valid 
substring is "()(())". Length = 6.

Your Task:  
You dont need to read input or print anything. Complete the function findMaxLen() which takes S as input parameter and returns the maxlength.


Expected Time Complexity:O(n)
Expected Auxiliary Space: O(1)   

Codes Are:-
int findMaxLen(string s) {
        int n = s.size();
        vector<int> dp(n, 0);
        if(s[0] == '(' && s[1] == ')')
            dp[1] = 2;
        
        for(int i = 2; i < n; i++)
            if(s[i] == ')')
                if(s[i - dp[i-1] - 1] == '(')
                    dp[i] = dp[i-1] + 2 + dp[i - dp[i-1] - 2];
 
        return *max_element(dp.begin(), dp.end());
    }
