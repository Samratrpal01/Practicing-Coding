Given a String, find the longest palindromic subsequence.


Example 1:

Input:
S = "bbabcbcab"
Output: 7
Explanation: Subsequence "babcbab" is the
longest subsequence which is also a palindrome.
Example 2:

Input: 
S = "abcd"
Output: 1
Explanation: "a", "b", "c" and "d" are
palindromic and all have a length 1.

Your Task:
You don't need to read input or print anything. Your task is to complete the function longestPalinSubseq() which takes the string S as input and returns an integer denoting the length of the longest palindromic subsequence of S.


Expected Time Complexity: O(|S|*|S|).
Expected Auxiliary Space: O(|S|*|S|).

Codes Are:-
int longestPalinSubseq(string a) {
       string b=string(a.rbegin(),a.rend());
       int dp[a.size()+1][a.size()+1];
       for(auto i=0;i<a.size()+1;i++)
       {
           for(auto j=0;j<a.size()+1;j++)
           {
               if(i==0 || j==0)
               dp[i][j]=0;
           }
       }
       
       for(auto i=1;i<=a.size();i++)
       {
           for(auto j=1;j<=a.size();j++)
           {
               if(a[i-1]==b[j-1])
               dp[i][j]=1+dp[i-1][j-1];
               else
               dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
           }
       }
       
       return dp[a.size()][a.size()];
       
    }
